theme = "onedark"

[editor]
true-color = true
line-number = "relative"
cursorline = true
bufferline = "multiple"
mouse = true
middle-click-paste = false
insert-final-newline = true
rulers = [80]
end-of-line-diagnostics = "hint"
inline-diagnostics.cursor-line = "warning"
inline-diagnostics.other-lines = "error"

file-picker.hidden = false
indent-guides.render = true

smart-tab.enable = true
soft-wrap.enable = true

[editor.auto-save]
focus-lost = true
# autosave after 3 seconds
after-delay.enable = true
after-delay.timeout = 3000

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.lsp]
display-progress-messages = true
display-inlay-hints = true

[editor.statusline]
left = [
  "mode",
  "spinner",
  "diagnostics",
  "spacer",
  "version-control"
]
center = [
  "file-name",
  "read-only-indicator",
  "file-modification-indicator"
]
right = [
  "register",
  "selections",
  "position",
  "position-percentage",
  "file-encoding",
  "file-line-ending",
  "file-type"
]

[editor.terminal]
command = "zellij"
args = ["action", "new-pane", "-d", "down", "-cs", "-n", "debug", "--"]

[editor.whitespace.render]
space = "none"
tab = "all"
nbsp = "all"
nnbsp = "all"
newline = "none"

[keys.insert]
# comments
"C-/" = "toggle_comments"
# smart tab
S-tab = "move_parent_node_start"

[keys.select]
# comments
"C-/" = "toggle_comments"
# smart tab
tab = "extend_parent_node_end"
S-tab = "extend_parent_node_start"
# make X extend line above
X = "extend_line_above"

# duplicate bind for [p
"["."[" = "goto_prev_paragraph"
"{" = "goto_prev_paragraph"
# duplicate bind for ]p
"]"."]" = "goto_next_paragraph"
"}" = "goto_next_paragraph"

[keys.select.space]
C = "no_op"
A-c = "no_op"
# consolidate comment stuff into sub-mode
[keys.select.space.c]
c = "toggle_comments"
C = "toggle_block_comments"
A-c = "toggle_line_comments"

[keys.normal]
# duplicate bind for [p
"["."[" = ["extend_to_line_bounds", "goto_prev_paragraph"]
"{" = ["extend_to_line_bounds", "goto_prev_paragraph"]
# duplicate bind for ]p
"]"."]" = ["goto_line_start", "goto_next_paragraph"]
"}" = ["goto_line_start", "goto_next_paragraph"]
# smart tab
tab = "move_parent_node_end"
S-tab = "move_parent_node_start"
# comments
"C-/" = "toggle_comments"
# close file
C-w = ":buffer-close"
# delete the selected line(s). This is from vscode,
# but might be an anti-pattern since `@xd` does the same thing, effectively
S-del = [
  "ensure_selections_forward",
  "extend_to_line_bounds",
  "extend_char_right",
  "extend_char_left",
  "delete_selection"
]
# make X extend line above (makes more sense then existing binding)
X = "extend_line_above"

# Move lines up/down.
A-j = [
  "ensure_selections_forward",
  "extend_to_line_bounds",
  "extend_char_right",
  "extend_char_left",
  "delete_selection",
  "add_newline_below",
  "move_line_down",
  "replace_with_yanked"
]
A-k = [
  "ensure_selections_forward",
  "extend_to_line_bounds",
  "extend_char_right",
  "extend_char_left",
  "delete_selection",
  "move_line_up",
  "add_newline_above",
  "move_line_up",
  "replace_with_yanked"
]

# function row (from vscode)
"F1" = "command_palette"
"F2" = "rename_symbol"

# Some jump-list related bindings
"[".j = "jump_backward"
"[".s = "save_selection"
"]".j = "jump_forward"
"]".s = "save_selection"

# New minor mode for various misc utilities
[keys.normal."backspace"]
# save
s = [":write"]
S = [":write!"]
# Lazygit
g = ":sh zellij run -ci --name lazygit -- lazygit"
# Switch to terminal tab, create it if it doesn't exist
t = ":sh zellij action go-to-tab-name -c helix-term"
# file picker
f = ":sh zellij run -n Explorer -c -f -x 10% -y 10% --width 80% --height 80% -- ~/.config/helix/scripts/picker.sh open $(pwd)"


[keys.normal.space]
F = "no_op"
C = "no_op"
A-c = "no_op"
# consolidate comment stuff into sub-mode
[keys.normal.space.c]
c = "toggle_comments"
C = "toggle_block_comments"
A-c = "toggle_line_comments"
# Consolidate file picker stuff into sub-mode
[keys.normal.space.f]
f = "file_picker"
F = "file_picker_in_current_directory"
o = "file_picker_in_current_buffer_directory"
